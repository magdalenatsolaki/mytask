[versions]
appleplugin = "222.3345.143-0.19"
gradleplugin = "7.3.1"
kotlin = "1.7.20"
coreKtx = "1.9.0"
appCompat = "1.6.0"
compose = "1.2.2"
springboot = "3.0.2"
springDepMngt = "1.1.0"
activityCompose = "1.6.1"
lifecycleVersion = "2.5.1"
openApiWebMvc = "2.0.2"
junit = "5.9.2"
springOpenApiGradleplugin = "1.6.0"
openApiGenerator = "6.2.1"
composeMaterial3 = "1.0.1"
composeRuntimeLiveData = "1.3.3"
sqldelight = "1.5.5"
kotlinCompilerExtensionVersion = "1.3.2"
[libraries]
android-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
android-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
spring-openapi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "openApiWebMvc" }
springboot-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
springboot-web = { module = "org.springframework.boot:spring-boot-starter-web" }
springboot-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
springboot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
springboot-test = { module = "org.springframework.boot:spring-boot-starter-test" }
jackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-script-runtime = { module = "org.jetbrains.kotlin:kotlin-script-runtime", version.ref = "kotlin" }
kotlin-test-common = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlin" }
kotlin-test-annotations-common = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
h2 = { module = "com.h2database:h2" }
junit = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "composeRuntimeLiveData" }

lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleVersion" } #ViewModel
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleVersion" } #ViewModel utilities for Compose
lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleVersion" } #LiveData
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleVersion" } #Lifecycles only (without ViewModel or LiveData)
lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycleVersion" } #Saved state module for ViewModel
sqldelight-android = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqldelight" }

[plugins]
android-application = { id = "com.android.application", version.ref = "gradleplugin" }
android-library = { id = "com.android.library", version.ref = "gradleplugin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
springboot = { id = "org.springframework.boot", version.ref = "springboot" }
spring-depmngt = { id = "io.spring.dependency-management", version.ref = "springDepMngt" }
spring-openapi-gradleplugin = { id = "org.springdoc.openapi-gradle-plugin", version.ref = "springOpenApiGradleplugin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-plugin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-plugin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openApiGenerator" }
sqldelight = { id = "com.squareup.sqldelight", version.ref = "sqldelight" }
apple = { id = "org.jetbrains.gradle.apple.applePlugin", version.ref = "appleplugin" }

[bundles]
backendApiImpl = ["springboot-jpa", "springboot-web", "springboot-validation", "jackson", "kotlin-reflect", "kotlin-stdlib-jdk8", "kotlin-script-runtime","spring-openapi"]
backendApiDevOnly = ["springboot-devtools"]
backendApiRunOnly = ["h2"]
backendApiTestImp = ["springboot-test"]
androidAppImpl = ["lifecycle-viewmodel-ktx", "lifecycle-viewmodel-compose", "lifecycle-livedata-ktx", "lifecycle-runtime-ktx", "lifecycle-viewmodel-savedstate"]